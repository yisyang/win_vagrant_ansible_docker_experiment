---
# File: main.yml
# Type: task
# Part: Scott/Bootstrap

#- name: Update APT package cache
#  action: apt update_cache=yes
 
#- name: Run apt-get upgrade
#  action: apt upgrade=yes
 
- name: Bootstrap | Install fail2ban
  action: apt pkg=fail2ban state=installed

- name: Bootstrap | Disallow root SSH access
  action: lineinfile dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present
  notify:
    - Restart sshd

- name: Bootstrap | Disallow password authentication
  action: lineinfile dest=/etc/ssh/sshd_config regexp="^PasswordAuthentication" line="PasswordAuthentication no" state=present
  notify: Restart sshd

# Ensure only selected users can sudo
- name: Bootstrap | create group admin
  action: group name=admin
- name: Bootstrap | create custom user
  user: name={{ custom_user }} group=admin state=present
- name: Bootstrap | set custom user key
  authorized_key: user={{ custom_user }} key="{{ lookup('file', custom_user_pubkey) }}"
- name: Bootstrap | add custom user to admin group
  action: command usermod -a -G admin {{ custom_user }}
- name: Bootstrap | Protect su by limiting access only to admin group.
  action: command dpkg-statoverride --update --force --add root admin 4750 /bin/su
- name: Bootstrap | ensure sudoers.d is enabled
  lineinfile: dest=/etc/sudoers state=present backup=yes regexp="^#includedir /etc/sudoers.d" line="#includedir /etc/sudoers.d"
- name: Bootstrap | ensure the user can execute sudo commands without a password
  copy: content="{{ custom_user }} ALL=(ALL) NOPASSWD:ALL" dest=/etc/sudoers.d/{{ custom_user }} owner=root group=root mode=0440

- name: Bootstrap | Install rootkit detection
  action: apt pkg=chkrootkit state=present
- name: Bootstrap | Install rootkit detection
  action: apt pkg=rkhunter state=present

- name: Bootstrap | Install unattended-upgrades
  action: apt pkg=unattended-upgrades state=present
 
- name: Bootstrap | Adjust APT update intervals
  action: copy src=apt_periodic dest=/etc/apt/apt.conf.d/10periodic

- name: Bootstrap | Copy debconf selections so that Postfix can configure itself non-interactively
  copy: src=postfix_selections  dest=/tmp/postfix_selections

- name: Bootstrap | Set up Postfix to relay mail
  action: command debconf-set-selections /tmp/postfix_selections

#- name: Install logwatch
#  action: apt pkg=logwatch state=installed
#
#- name: Make logwatch mail $logwatch_email daily
#  action: lineinfile dest=/etc/cron.daily/00logwatch regexp="^/usr/sbin/logwatch" line="/usr/sbin/logwatch --output mail --mailto $logwatch_email --detail high" state=present

# Set firewall
#- name: Firewall allow ssh (ufw enable has to be run manually)
#  action: command ufw allow ssh
#- name: Firewall allow http (ufw enable has to be run manually)
#  action: command ufw allow http
#- name: Firewall allow https (ufw enable has to be run manually)
#  action: command ufw allow https

#- name: Prevent IP spoofing
#  action: lineinfile dest=/etc/host.conf regexp="^order" line="order bind,hosts" state=present
#- name: Prevent IP spoofing
#  action: lineinfile dest=/etc/host.conf regexp="^nospoof" line="nospoof on" state=present

#- name: Intrusion detection PSAD
#  action: apt pkg=psad state=present
#- name: Configure PSAD
#  action: lineinfile dest=/etc/psad/psad.conf regexp="^EMAIL_ADDRESSES" line="EMAIL_ADDRESSES             $logwatch_email;" state=present
#- name: Configure PSAD (IPtables)
#  action: command iptables -A INPUT -j LOG
#- name: Configure PSAD (IPtables)
#  action: command iptables -A FORWARD -j LOG
#- name: Configure PSAD (IP6tables)
#  action: command ip6tables -A INPUT -j LOG
#- name: Configure PSAD (IP6tables)
#  action: command ip6tables -A FORWARD -j LOG
#- name: Configure PSAD (update signatures)
#  action: command psad --sig-update
#
#- name: SELinux
#  action: apt pkg=apparmor state=present
#- name: SELinux
#  action: apt pkg=apparmor-profiles state=present

#- name: DenyHosts
#  action: apt pkg=denyhosts state=present
#
- name: Secure shm
  action: lineinfile dest=/etc/fstab  regexp="^tmpfs" line="tmpfs     /dev/shm     tmpfs     defaults,noexec,nosuid     0     0" state=present
#
#- name: Reboot
#  action: command reboot