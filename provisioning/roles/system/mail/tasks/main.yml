---
# File: main.yml
# Type: task
# Part: System/Mail

# Prepare facts
- name: System | Mail | Set SSL cert destination
  set_fact:
    system_mail_ssl_cert_dest: "{{ system_mail_ssl.cert.dest | default('/etc/dovecot/tls_cert.crt') }}"
  when: system_mail_ssl is defined and system_mail_ssl.cert is defined

- name: System | Mail | Set SSL cert destination
  set_fact:
    system_mail_ssl_cert_dest: "/etc/dovecot/tls_cert.crt"
  when: system_mail_ssl is not defined or system_mail_ssl.cert is not defined

- name: System | Mail | Set SSL key destination
  set_fact:
    system_mail_ssl_key_dest: "{{ system_mail_ssl.key.dest | default('/etc/dovecot/private/tls_key.key') }}"
  when: system_mail_ssl is defined and system_mail_ssl.key is defined

- name: System | Mail | Set SSL key destination
  set_fact:
    system_mail_ssl_key_dest: "/etc/dovecot/private/tls_key.key"
  when: system_mail_ssl is not defined or system_mail_ssl.key is not defined


# Install dependencies

- name: System | Mail | Install requried apt modules
  apt: name={{ item }} state=latest
  with_items: system_mail_apt_modules
  when: system_mail_apt_modules is defined


# Prepare MySQL DB

- name: System | Mail | Create MySQL mail user group on system
  group: name={{ system_mail_mysql_user }} state=present
  when: system_mail_domains is defined and system_mail_domains|length

- name: System | Mail | Create MySQL mail user on system
  user: name={{ system_mail_mysql_user }} group={{ system_mail_mysql_user }} shell=/bin/bash state=present
  when: system_mail_domains is defined and system_mail_domains|length

- name: System | Mail | Update MySQL mail user password on system
  user: name={{ system_mail_mysql_user }} password={{ system_mail_mysql_user_password }}
  when: system_mail_domains is defined and system_mail_domains|length and system_mail_mysql_user_password is defined

- name: System | Mail | Copy temporary MySQL database import file
  template: src=mailserver.sql.j2 dest=/tmp/ansible_system_mail_mailserver.sql owner={{ system_mail_mysql_user }} group={{ system_mail_mysql_user }} mode=0644 backup=yes
  when: system_mail_domains is defined and system_mail_domains|length
  changed_when: false

- name: System | Mail | Create MySQL database
  mysql_db: name={{ system_mail_mysql_database }} state=present
  when: system_mail_domains is defined and system_mail_domains|length

- name: System | Mail | Import database data
  mysql_db: name={{ system_mail_mysql_database }} target=/tmp/ansible_system_mail_mailserver.sql state=import
  when: system_mail_domains is defined and system_mail_domains|length

- name: System | Mail | Create MySQL mail user and authorize to database
  mysql_user: login_user=root login_password={{ database_mysql_root_password }} name={{ system_mail_mysql_user }} host=localhost password={{ system_mail_mysql_user_password }} priv={{ system_mail_mysql_database }}.*:SELECT state=present
  when: system_mail_domains is defined and system_mail_domains|length

- name: System | Mail | Remove database import file
  file: path=/tmp/ansible_system_mail_mailserver.sql state=absent
  when: system_mail_domains is defined and system_mail_domains|length
  changed_when: false


# Configure Postfix
# Templating is separated into 5 tasks to work around Ansible "changed' status

- name: System | Mail | Resolve postfix config templates
  template: src={{ item.src }} dest={{ item.tmp_file }}
  with_items: system_mail_postfix_config_files
  when: system_mail_domains is defined and system_mail_domains|length
  changed_when: false
- name: System | Mail | Compute checksum of old config
  stat: path={{ item.dest }} get_checksum=true
  with_items: system_mail_postfix_config_files
  changed_when: false
  register: system_mail_postfix_config_checksum_old
  when: system_mail_domains is defined and system_mail_domains|length
  ignore_errors: true
- name: System | Mail | Compute checksum of new config
  stat: path={{ item.tmp_file }} get_checksum=true
  with_items: system_mail_postfix_config_files
  changed_when: false
  register: system_mail_postfix_config_checksum_new
  when: system_mail_domains is defined and system_mail_domains|length
- name: System | Mail | Move postfix config files where checksum is different
  shell: |
    mv {{ item.1.dest }} {{ item.1.dest }}.{{ ansible_date_time.date }}@{{ ansible_date_time.time }}~
    mv {{ item.1.tmp_file }} {{ item.1.dest }}
  with_indexed_items: system_mail_postfix_config_files
  notify: Restart postfix
  when: system_mail_domains is defined and system_mail_domains|length and (system_mail_postfix_config_checksum_old is not defined or not system_mail_postfix_config_checksum_old.results[item.0].stat.exists or system_mail_postfix_config_checksum_new.results[item.0].stat.checksum != system_mail_postfix_config_checksum_old.results[item.0].stat.checksum)
  ignore_errors: true
- name: System | Mail | Remove temporary config files
  file: path={{ item.tmp_file }} state=absent
  with_items: system_mail_postfix_config_files
  changed_when: false
  when: system_mail_domains is defined and system_mail_domains|length


# Configure Dovecot
# Templating is separated into 5 tasks to work around Ansible "changed' status

- name: System | Mail | Resolve dovecot config templates
  template: src={{ item.src }} dest={{ item.tmp_file }}
  with_items: system_mail_dovecot_config_files
  when: system_mail_domains is defined and system_mail_domains|length
  changed_when: false
- name: System | Mail | Compute checksum of old config
  stat: path={{ item.dest }} get_checksum=true
  with_items: system_mail_dovecot_config_files
  changed_when: false
  register: system_mail_dovecot_config_checksum_old
  when: system_mail_domains is defined and system_mail_domains|length
  ignore_errors: true
- name: System | Mail | Compute checksum of new config
  stat: path={{ item.tmp_file }} get_checksum=true
  with_items: system_mail_dovecot_config_files
  changed_when: false
  register: system_mail_dovecot_config_checksum_new
  when: system_mail_domains is defined and system_mail_domains|length
- name: System | Mail | Move dovecot config files where checksum is different
  shell: |
    mv {{ item.1.dest }} {{ item.1.dest }}.{{ ansible_date_time.date }}@{{ ansible_date_time.time }}~
    mv {{ item.1.tmp_file }} {{ item.1.dest }}
  with_indexed_items: system_mail_dovecot_config_files
  notify: Restart dovecot
  when: system_mail_domains is defined and system_mail_domains|length and (system_mail_dovecot_config_checksum_old is not defined or not system_mail_dovecot_config_checksum_old.results[item.0].stat.exists or system_mail_dovecot_config_checksum_new.results[item.0].stat.checksum != system_mail_dovecot_config_checksum_old.results[item.0].stat.checksum)
  ignore_errors: true
- name: System | Mail | Remove temporary config files
  file: path={{ item.tmp_file }} state=absent
  with_items: system_mail_dovecot_config_files
  changed_when: false
  when: system_mail_domains is defined and system_mail_domains|length


# Misc

- name: System | Mail | Generate SSL key and cert
  command: openssl req -subj "{{ system_mail_ssl.generate_cert_subject | default('/C=US/O=localhost/CN=localhost') }}" -new -newkey rsa:2048 -sha256 -days 1100 -nodes -x509 -keyout {{ system_mail_ssl_key_dest }} -out {{ system_mail_ssl_cert_dest }}
  when: system_mail_ssl is defined and system_mail_ssl.self_signed

- name: System | Mail | Copy SSL key
  copy: src={{ system_mail_ssl.key.src }} dest={{ system_mail_ssl_key_dest }}
  when: system_mail_ssl is defined and system_mail_ssl.key is defined and system_mail_ssl.key.src is defined

- name: System | Mail | Copy SSL cert
  copy: src={{ system_mail_ssl.cert.src }} dest={{ system_mail_ssl_cert_dest }}
  when: system_mail_ssl is defined and system_mail_ssl.cert is defined and system_mail_ssl.cert.src is defined

- name: System | Mail | Copy CA cert
  copy: src={{ system_mail_ssl.ca.src }} dest={{ system_mail_ssl.ca.dest | default('/etc/dovecot/tls_ca.crt') }}
  when: system_mail_ssl is defined and system_mail_ssl.ca is defined and system_mail_ssl.ca.src is defined

- name: System | Mail | Update permissions on SSL key
  file: path={{ system_mail_ssl_key_dest }} mode=0600 state=file
  when: system_mail_domains is defined and system_mail_domains|length

- name: System | Mail | Create system mail user group
  group: name={{ system_mail_user }} gid={{ system_mail_user_gid | default('5000') }} state=present
  when: system_mail_domains is defined and system_mail_domains|length

- name: System | Mail | Create system mail user
  user: name={{ system_mail_user }} group={{ system_mail_user }} uid={{ system_mail_user_uid | default('5000') }} shell=/bin/bash home=/var/mail state=present
  when: system_mail_domains is defined and system_mail_domains|length

- name: System | Mail | Make mail folder
  file: path=/var/mail/vhosts/ state=directory
  when: system_mail_domains is defined and system_mail_domains|length

- name: System | Mail | Make mail folders for each domain
  file: path=/var/mail/vhosts/{{ item.name }} state=directory
  with_items: system_mail_domains
  when: system_mail_domains is defined and system_mail_domains|length

- name: System | Mail | Update mail folders permissions
  file: path={{ item.dest }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }} recurse=yes state=directory
  with_items:
    - { dest: '/var/mail', owner: "{{ system_mail_user }}", group: "{{ system_mail_user }}", mode: 'u=rwX,g=rX,o=rX' }
    - { dest: '/etc/dovecot', owner: "{{ system_mail_user }}", group: 'dovecot', mode: 'o-rwx' }
  when: system_mail_domains is defined and system_mail_domains|length